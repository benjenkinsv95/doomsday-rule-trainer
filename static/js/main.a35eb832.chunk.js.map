{"version":3,"sources":["components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","styles/heroStyles.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","components/trainer/Notes.js","components/trainer/Trainer.js","components/UnauthenticatedHome.js","App.js","index.js"],"names":["AutoDismissAlert","variant","heading","message","useState","show","setShow","timeoutId","setTimeoutId","console","log","useEffect","id","setTimeout","clearTimeout","Alert","onClose","dismissible","className","Heading","authenticatedOptions","to","unauthenticatedOptions","alwaysOptions","Header","user","Navbar","bg","expand","Container","Brand","style","color","textDecoration","Toggle","aria-controls","Collapse","Nav","email","apiUrls","apiUrl","window","location","hostname","signUp","password","passwordConfirmation","axios","post","credentials","password_confirmation","signIn","signOut","delete","headers","Authorization","token","changePassword","oldPassword","newPassword","patch","passwords","old","new","gradientStyles","background","minHeight","heroStyles","display","flexDirection","justifyContent","alignItems","maxWidth","margin","SignUp","msgAlert","setUser","setEmail","setPassword","setPasswordConfirmation","shouldNavigate","setShouldNavigate","onSignUp","event","a","preventDefault","res","data","localStorage","setItem","JSON","stringify","Form","onSubmit","Group","controlId","Label","Control","required","type","name","value","placeholder","onChange","target","Button","SignIn","onSignIn","SignOut","clearUser","removeItem","performSignOut","ChangePassword","setOldPassword","setNewPassword","onChangePassword","Notes","Accordion","Item","eventKey","Body","Table","striped","bordered","hover","isOdd","num","newDate","start","Date","end","getTime","Math","random","Trainer","date","setDate","startingNumber","setStartingNumber","firstOddOrEven","setFirstOddOrEven","afterDivision","setAfterDivision","secondOddOrEven","setSecondOddOrEven","modulo7","setModulo7","subtractFrom7","setSubtractFrom7","anchorDay","setAnchorDay","dayOfWeek","setDayOfWeek","refs","useRef","month","toLocaleString","startingNumberAnswer","getFullYear","firstOddOrEvenAnswers","afterDivisionAnswers","map","n","secondOddOrEvenAnswers","answer","push","modulo7Answers","subtractFrom7Answers","anchorDayAnswer","weekday","dayOfWeekAnswer","current","focus","includes","toLowerCase","Card","text","Title","getDate","Text","e","parseInt","disabled","ref","ButtonGroup","aria-label","onClick","length","day","index","Footer","size","Home","App","msgAlerts","setMsgAlerts","uuid","path","element","UnauthenticatedHome","appJsx","basename","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a35eb832.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\n\n// We have imported some custom styling for this alert\n// Which will be off-topic, unless extra time at the end of the lesson.\nimport './AutoDismissAlert.scss'\nimport Alert from 'react-bootstrap/Alert'\n\nfunction AutoDismissAlert ({ variant, heading, message }) {\n  // create `show` state. When this is false, the Alert will be hidden from the screen.\n  const [show, setShow] = useState(true)\n  // We are going to create a timer that will stop showing the alert after 5 seconds\n  // We store the timeoutId, incase we need to cancel the timer early (because the AutoDismissAlert was unmounted)\n  const [timeoutId, setTimeoutId] = useState(null)\n  console.log(timeoutId)\n\n  // this will run once, when the component is mounted (added) to the screen\n  // it runs once, because it has an empty dependency array as the second argument\n  useEffect(() => {\n    // We want to create a timer, that closes the alert after 5 seconds (5000 milliseconds)\n    const id = setTimeout(() => setShow(false), 5000)\n    // Keep track of the timeoutId\n    setTimeoutId(id)\n\n    // We want to clean up the timer\n    // this is like componentWillUnmount, it is run whenever the component is unmounted\n    // and its also run before an effect is re-created\n    return function cleanup () {\n      clearTimeout(timeoutId)\n    }\n  }, [])\n\n  return (\n    <Alert\n      /* This is the color, make it the bootstrap passed down as a prop */\n      variant={variant}\n      /* This function sets the show state to false, whenever the x in the top right is clicked. */\n      onClose={() => setShow(false)}\n      /* This adds a close button to our alert */\n      dismissible\n      /* The show property will display the alert if true, and hide it if false. */\n      show={show}\n    >\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n\nexport default AutoDismissAlert\n","import React from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Container from 'react-bootstrap/Container'\nimport { Link, NavLink } from 'react-router-dom'\n\nconst authenticatedOptions = (\n  <>\n    <NavLink to='/change-password' className='nav-link'>\n      Change Password\n    </NavLink>\n    <NavLink to='/sign-out' className='nav-link'>\n      Sign Out\n    </NavLink>\n  </>\n)\n\nconst unauthenticatedOptions = (\n  <>\n    <NavLink to='/sign-up' className='nav-link'>\n      Sign Up\n    </NavLink>\n    <NavLink to='/sign-in' className='nav-link'>\n      Sign In\n    </NavLink>\n  </>\n)\n\nconst alwaysOptions = (\n  <>{/* <NavLink to='/' className='nav-link'>Home</NavLink> */}</>\n)\n\nconst Header = ({ user }) => (\n  <Navbar bg='dark' variant='dark' expand='md'>\n    <Container>\n      <Navbar.Brand>\n        <Link to='/' style={{ color: '#FFF', textDecoration: 'none' }}>\n          Doomsday Rule Trainer\n        </Link>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls='basic-navbar-nav' />\n      <Navbar.Collapse id='basic-navbar-nav'>\n        <Nav className='ms-auto'>\n          {user && (\n            <span className='navbar-text me-2'>Welcome, {user.email}</span>\n          )}\n          {alwaysOptions}\n          {user ? authenticatedOptions : unauthenticatedOptions}\n        </Nav>\n      </Navbar.Collapse>\n    </Container>\n  </Navbar>\n)\n\nexport default Header\n","let apiUrl\nconst apiUrls = {\n  production: 'https://aqueous-atoll-85096.herokuapp.com',\n  development: 'http://localhost:4741'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (email, password, passwordConfirmation) => {\n  return axios.post(apiUrl + '/sign-up/', {\n    credentials: {\n      email,\n      password,\n      password_confirmation: passwordConfirmation\n    }\n  })\n}\n\nexport const signIn = (email, password) => {\n  return axios.post(apiUrl + '/sign-in/', {\n    credentials: {\n      email,\n      password\n    }\n  })\n}\n\nexport const signOut = user => {\n  return axios.delete(apiUrl + '/sign-out/', {\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (oldPassword, newPassword, user) => {\n  return axios.patch(\n    apiUrl + '/change-password/',\n    {\n      passwords: {\n        old: oldPassword,\n        new: newPassword\n      }\n    },\n    {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    }\n  )\n}\n","const headerHeight = '56px'\nexport const centerStyles = {\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  alignItems: 'center',\n  maxWidth: '100%',\n  margin: '0'\n}\n\nexport const gradientStyles = {\n  background:\n    'linear-gradient(45deg, #e85c90, #dd72c1, #c08eea, #95a8ff, #5dbfff, #17d2ff, #14e2ff, #58efec)',\n  color: 'white',\n  /* Take up 30% of the viewport's height, (30 out of 100) */\n  minHeight: `calc(100vh - ${headerHeight})`\n}\n\nexport const heroStyles = {\n  ...centerStyles,\n  ...gradientStyles\n}\n\nexport default heroStyles\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport heroStyles from '../../styles/heroStyles'\n\nconst SignUp = ({ msgAlert, setUser, user }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [passwordConfirmation, setPasswordConfirmation] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onSignUp = async (event) => {\n    event.preventDefault()\n\n    try {\n      await signUp(email, password, passwordConfirmation)\n      const res = await signIn(email, password)\n      setUser(res.data.user)\n      // eslint-disable-next-line no-undef\n      localStorage.setItem('user', JSON.stringify(res.data.user))\n\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setEmail('')\n      setPassword('')\n      setPasswordConfirmation('')\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate || user) {\n    return <Navigate to='/train' />\n  }\n\n  return (\n    <div style={heroStyles} className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign Up</h3>\n        <Form onSubmit={onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={event => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={event => setPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={event => setPasswordConfirmation(event.target.value)}\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='dark' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignUp\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\nimport heroStyles from '../../styles/heroStyles'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignIn = ({ msgAlert, setUser, user }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onSignIn = async (event) => {\n    event.preventDefault()\n\n    try {\n      const res = await signIn(email, password)\n      setUser(res.data.user)\n      // eslint-disable-next-line no-undef\n      localStorage.setItem('user', JSON.stringify(res.data.user))\n\n      msgAlert({\n        heading: 'Sign In Success',\n        message: signInSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setEmail('')\n      setPassword('')\n      msgAlert({\n        heading: 'Sign In Failed with error: ' + error.message,\n        message: signInFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate || user) {\n    return <Navigate to='/train' />\n  }\n\n  return (\n    <div style={heroStyles} className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign In</h3>\n        <Form onSubmit={onSignIn}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={event => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={event => setPassword(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='dark' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignIn\n","import React, { useState, useEffect } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nconst SignOut = ({ msgAlert, clearUser, user }) => {\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  // this is like componentDidMount, it will run whenever the SignOut component\n  // is mounted (or added) to the page\n  useEffect(() => {\n  // for performance reasons, when using `useEffect`\n  // it's a best practice to create a helper function w/ async/await\n    const performSignOut = async () => {\n      msgAlert({\n        heading: 'Signed Out Successfully',\n        message: signOutSuccess,\n        variant: 'success'\n      })\n\n      localStorage.removeItem('user')\n\n      // reset the user back to its initial value\n      clearUser()\n      setShouldNavigate(true)\n\n      // make a signOut axios request\n      await signOut(user)\n    }\n\n    performSignOut()\n  }, [])\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return ''\n}\n\nexport default SignOut\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\nimport heroStyles from '../../styles/heroStyles'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst ChangePassword = ({ msgAlert, user }) => {\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onChangePassword = async (event) => {\n    event.preventDefault()\n\n    try {\n      await changePassword(oldPassword, newPassword, user)\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setOldPassword('')\n      setNewPassword('')\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/train' />\n  }\n\n  return (\n    <div style={heroStyles} className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        <Form onSubmit={onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={event => setOldPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={event => setNewPassword(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='dark' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default ChangePassword\n","import React from 'react'\nimport Accordion from 'react-bootstrap/Accordion'\nimport Table from 'react-bootstrap/Table'\n\nconst Notes = () => {\n  return (\n    <Accordion className='bg-dark'>\n      <Accordion.Item className='bg-dark' eventKey='0'>\n        <Accordion.Header>Century Anchor Days</Accordion.Header>\n        <Accordion.Body>\n          <Table striped bordered hover variant='dark'>\n            <thead>\n              <tr>\n                <th>Century</th>\n                <th>Anchor Day</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>1700 - 1799</td>\n                <td>Sunday</td>\n              </tr>\n              <tr>\n                <td>1800 - 1899</td>\n                <td>Friday</td>\n              </tr>\n              <tr>\n                <td>1900 - 1999</td>\n                <td>Wednesday</td>\n              </tr>\n              <tr>\n                <td>2000 - 2099</td>\n                <td>Tuesday</td>\n              </tr>\n\n              <tr>\n                <td>-</td>\n                <td>-</td>\n              </tr>\n\n              <tr>\n                <td>2100 - 2199</td>\n                <td>Sunday</td>\n              </tr>\n              <tr>\n                <td>2200 - 2299</td>\n                <td>Friday</td>\n              </tr>\n            </tbody>\n          </Table>\n        </Accordion.Body>\n      </Accordion.Item>\n\n      <Accordion.Item\n        className='bg-dark'\n        eventKey='1'>\n        <Accordion.Header>Memorable Doomsdays</Accordion.Header>\n        <Accordion.Body>\n          <Table striped bordered hover variant='dark'>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Doomsdays</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>January</td>\n                <td>1/3 in common years and 1/4 in leap years</td>\n              </tr>\n              <tr>\n                <td>February&#39;s Last Day</td>\n                <td>2/28 or 2/29 in a leap year</td>\n              </tr>\n              <tr>\n                <td>Pi Day</td>\n                <td>3/14</td>\n              </tr>\n              <tr>\n                <td>Double Dates</td>\n                <td>4/4, 6/6, 8/8, 10/10, and 12/12</td>\n              </tr>\n\n              <tr>\n                <td>9-to-5 at 7-11</td>\n                <td>5/9, 7/11, 9/5, and 11/7</td>\n              </tr>\n            </tbody>\n          </Table>\n        </Accordion.Body>\n      </Accordion.Item>\n\n      <Accordion.Item className='bg-dark' eventKey='2'>\n        <Accordion.Header className='bg-dark'>Weekdays As Numbers</Accordion.Header>\n        <Accordion.Body>\n          <Table striped bordered hover variant='dark'>\n            <thead>\n              <tr>\n                <th>Day</th>\n                <th>Number</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>Sunday</td>\n                <td>0</td>\n              </tr>\n              <tr>\n                <td>Monday</td>\n                <td>1</td>\n              </tr>\n              <tr>\n                <td>Tuesday</td>\n                <td>2</td>\n              </tr>\n              <tr>\n                <td>Wednesday</td>\n                <td>3</td>\n              </tr>\n              <tr>\n                <td>Thursday</td>\n                <td>4</td>\n              </tr>\n              <tr>\n                <td>Friday</td>\n                <td>5</td>\n              </tr>\n              <tr>\n                <td>Saturday</td>\n                <td>6</td>\n              </tr>\n            </tbody>\n          </Table>\n        </Accordion.Body>\n      </Accordion.Item>\n\n    </Accordion>\n\n  )\n}\nexport default Notes\n","import React, { useState, useRef, useEffect } from 'react'\nimport heroStyles from '../../styles/heroStyles'\nimport Card from 'react-bootstrap/Card'\nimport Form from 'react-bootstrap/Form'\nimport Notes from './Notes'\nimport { Button, ButtonGroup } from 'react-bootstrap'\n\nconst isOdd = num => num % 2 === 1\n\n// https://stackoverflow.com/a/9035732\nfunction randomDate (start, end) {\n  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()))\n}\n\nconst newDate = () => {\n  return randomDate(new Date('1900-01-01T12:00:00'), new Date('2099-12-31T12:00:00'))\n}\n\nconst Trainer = ({ msgAlert }) => {\n  const [date, setDate] = useState(newDate())\n  const [startingNumber, setStartingNumber] = useState('')\n  const [firstOddOrEven, setFirstOddOrEven] = useState('')\n  const [afterDivision, setAfterDivision\n  ] = useState('')\n  const [secondOddOrEven, setSecondOddOrEven] = useState('')\n  const [modulo7, setModulo7] = useState('-1')\n  const [subtractFrom7, setSubtractFrom7] = useState('-1')\n  const [anchorDay, setAnchorDay] = useState('')\n  const [dayOfWeek, setDayOfWeek] = useState('')\n  const refs = {\n    startingNumber: useRef(null),\n    firstOddOrEven: useRef(null),\n    afterDivision: useRef(null),\n    secondOddOrEven: useRef(null),\n    modulo7: useRef(null),\n    subtractFrom7: useRef(null),\n    anchorDay: useRef(null),\n    dayOfWeek: useRef(null)\n  }\n\n  const month = date.toLocaleString('default', { month: 'long' })\n  const startingNumberAnswer = date.getFullYear() % 100\n  const firstOddOrEvenAnswers = isOdd(startingNumberAnswer)\n    ? [startingNumberAnswer + 11, startingNumberAnswer - 17]\n    : [startingNumberAnswer]\n  const afterDivisionAnswers = firstOddOrEvenAnswers.map(n => n / 2)\n\n  const secondOddOrEvenAnswers = []\n  for (const answer of afterDivisionAnswers) {\n    if (isOdd(answer)) {\n      secondOddOrEvenAnswers.push(answer + 11, answer - 17)\n    } else {\n      secondOddOrEvenAnswers.push(answer)\n    }\n  }\n  const modulo7Answers = secondOddOrEvenAnswers.map(n => n % 7)\n  const subtractFrom7Answers = modulo7Answers.map(n => 7 - n)\n  const anchorDayAnswer = new Date(`${date.getFullYear()}-04-04T12:00:00`).toLocaleString('en-us', { weekday: 'long' })\n  const dayOfWeekAnswer = date.toLocaleString('en-us', { weekday: 'long' })\n\n  // set focus\n  useEffect(() => {\n    if (startingNumber !== startingNumberAnswer) {\n      refs.startingNumber.current?.focus()\n    } else if (!firstOddOrEvenAnswers.includes(firstOddOrEven)) {\n      refs.firstOddOrEven.current?.focus()\n    } else if (!afterDivisionAnswers.includes(afterDivision)) {\n      refs.afterDivision.current?.focus()\n    } else if (!secondOddOrEvenAnswers.includes(secondOddOrEven)) {\n      refs.secondOddOrEven.current?.focus()\n    } else if (!modulo7Answers.includes(modulo7)) {\n      refs.modulo7.current?.focus()\n    } else if (!subtractFrom7Answers.includes(subtractFrom7)) {\n      refs.subtractFrom7.current?.focus()\n    } else if (anchorDay.toLowerCase() !== anchorDayAnswer.toLowerCase()) {\n      refs.anchorDay.current?.focus()\n    } else if (dayOfWeek.toLowerCase() !== dayOfWeekAnswer.toLowerCase()) {\n      refs.dayOfWeek.current?.focus()\n    }\n  })\n\n  const reset = () => {\n    setDate(newDate())\n    setStartingNumber('')\n    setFirstOddOrEven('')\n    setAfterDivision('')\n    setSecondOddOrEven('')\n    setModulo7('-1')\n    setSubtractFrom7('-1')\n    setAnchorDay('')\n    setDayOfWeek('')\n  }\n\n  return (\n    <div style={heroStyles}>\n      <div className='container'>\n        <div className='row'>\n          <div className='col-sm-10 col-md-10 mx-auto'>\n            <Card className='text-center mt-4 pb-2' bg='dark' text='white'>\n              <Card.Body>\n                <Card.Title>\n                  <h2>\n        What day of the week is{' '}\n                    <span className='text-primary'>\n                      {month} {date.getDate()} {date.getFullYear()}\n                    </span>{' '}\n        on?\n                  </h2>\n                </Card.Title>\n\n                <h2>\n      First find the <span className='text-secondary'>anchor day</span>\n                </h2>\n                <Form>\n                  <Form.Group className='my-3' controlId='startingNumber'>\n                    <Form.Label>Enter the starting number</Form.Label>\n                    <br></br>\n                    <Form.Text className='text-white'>\n          The starting number is the last two digits of the year.\n                    </Form.Text>\n\n                    <Form.Control\n                      className='mt-1 bg-dark text-primary'\n                      type='number'\n                      placeholder='Enter Starting Number'\n                      value={startingNumber}\n                      onChange={e => setStartingNumber(parseInt(e.target.value))}\n                      disabled={startingNumber === startingNumberAnswer}\n                      ref={refs.startingNumber}\n                    />\n                  </Form.Group>\n\n                  <Form.Group\n                    className={`mb-3 ${\n                      startingNumber === startingNumberAnswer ? '' : 'd-none'\n                    }`}\n                    controlId='oddOrEven1'\n                  >\n                    <Form.Label>Odd or Even?</Form.Label>\n                    <br></br>\n                    <Form.Text className='text-white'>\n          If the number is odd add 11 or subtract 17 (whichever is easier).\n                    </Form.Text>\n                    <Form.Control\n                      className='mt-1 bg-dark text-primary'\n                      type='number'\n                      placeholder='Enter Answer'\n                      value={firstOddOrEven}\n                      onChange={e => setFirstOddOrEven(parseInt(e.target.value))}\n                      disabled={firstOddOrEvenAnswers.includes(firstOddOrEven)}\n                      ref={refs.firstOddOrEven}\n                    />\n                  </Form.Group>\n\n                  <Form.Group\n                    className={`mb-3 ${\n                      firstOddOrEvenAnswers.includes(firstOddOrEven) ? '' : 'd-none'\n                    }`}\n                    controlId='divide'\n                  >\n                    <Form.Label>Divide by 2</Form.Label>\n                    <Form.Control\n                      className='mt-1 bg-dark text-primary'\n                      type='number'\n                      placeholder='Enter Answer'\n                      value={afterDivision}\n                      onChange={e => setAfterDivision(parseInt(e.target.value))}\n                      disabled={afterDivisionAnswers.includes(afterDivision)}\n                      ref={refs.afterDivision}\n                    />\n                  </Form.Group>\n\n                  <Form.Group\n                    className={`mb-3 ${afterDivisionAnswers.includes(afterDivision) ? '' : 'd-none'}`}\n                    controlId='oddOrEven2'\n                  >\n                    <Form.Label>Odd or Even?</Form.Label>\n                    <br></br>\n                    <Form.Text className='text-white'>\n    If the number is odd add 11 or subtract 17 (whichever is easier).\n                    </Form.Text>\n                    <Form.Control\n                      className='mt-1 bg-dark text-primary'\n                      type='number'\n                      placeholder='Enter Answer'\n                      value={secondOddOrEven}\n                      onChange={e => setSecondOddOrEven(parseInt(e.target.value))}\n                      disabled={secondOddOrEvenAnswers.includes(secondOddOrEven)}\n                      ref={refs.secondOddOrEven}\n                    />\n                  </Form.Group>\n\n                  <Form.Group\n                    className={`mb-3 ${secondOddOrEvenAnswers.includes(secondOddOrEven) ? '' : 'd-none'}`}\n                    controlId='modulo7'\n                  >\n                    <Form.Label>Modulo 7</Form.Label>\n                    <br></br>\n                    <Form.Text className='text-white'>\n                        Find the remainder after dividing by 7\n                    </Form.Text>\n                    <br />\n                    <ButtonGroup className=\"mt-1 text-white\" aria-label=\"First group\"\n                      ref={refs.modulo7}>\n                      {[0, 1, 2, 3, 4, 5, 6].map(num => (\n                        <Button\n                          key={num}\n                          variant={modulo7Answers.includes(modulo7) && modulo7 === num\n                            ? 'primary'\n                            : 'outline-primary'}\n                          disabled={modulo7Answers.includes(modulo7)}\n                          onClick={() => setModulo7(num)}\n                        >\n                          {num}\n                        </Button>\n                      ))}\n\n                    </ButtonGroup>\n                  </Form.Group>\n\n                  <Form.Group\n                    className={`mb-3 ${\n                      modulo7Answers.includes(modulo7) ? '' : 'd-none'\n                    }`}\n                    controlId='subract7'\n                  >\n                    <Form.Label>Subtract from 7</Form.Label>\n                    <br></br>\n                    <Form.Text className='text-white'>\n                        Subtract result from 7\n                    </Form.Text>\n                    <br/>\n                    <ButtonGroup className=\"mt-1 text-white\" aria-label=\"First group\"\n                      ref={refs.subtractFrom7}>\n                      {[1, 2, 3, 4, 5, 6, 7].map(num => (\n                        <Button\n                          key={num}\n                          disabled={subtractFrom7Answers.includes(subtractFrom7)}\n                          variant={subtractFrom7Answers.includes(subtractFrom7) && subtractFrom7 === num\n                            ? 'primary'\n                            : 'outline-primary'}\n                          onClick={() => setSubtractFrom7(num)}>{num}</Button>\n                      ))}\n                    </ButtonGroup>\n                  </Form.Group>\n\n                  <Form.Group\n                    className={`mb-3 ${subtractFrom7Answers.includes(subtractFrom7) ? '' : 'd-none'}`}\n                    controlId='modulo7'\n                  >\n                    <Form.Label>Count Forward {subtractFrom7Answers.length && subtractFrom7Answers[0]} Days</Form.Label>\n                    <br></br>\n                    <Form.Text className='text-white'>Count forward {subtractFrom7Answers.length && subtractFrom7Answers[0]} days from the century&#39;s anchor day to get the year <span className='text-secondary'>{date.getFullYear()}</span>&#39;s anchor day.</Form.Text>\n                    <br />\n                    <ButtonGroup className=\"mt-1 text-white\" aria-label=\"First group\"\n                      ref={refs.anchorDay}>\n                      {['Sunday', 'Monday', 'Tuesday', 'Wednesday'].map((day, index) => (\n                        <Button\n                          key={index}\n                          variant={anchorDay.toLowerCase() === anchorDayAnswer.toLowerCase() && anchorDay.toLowerCase() === day.toLowerCase()\n                            ? 'primary'\n                            : 'outline-primary'}\n                          disabled={anchorDay.toLowerCase() === anchorDayAnswer.toLowerCase()}\n                          onClick={() => setAnchorDay(day)}>{day}</Button>\n                      ))}\n                    </ButtonGroup>\n                    <ButtonGroup className=\"mt-1 text-white\" aria-label=\"First group\">\n                      {['Thursday', 'Friday', 'Saturday'].map((day, index) => (\n                        <Button\n                          key={index}\n                          variant={anchorDay.toLowerCase() === anchorDayAnswer.toLowerCase() && anchorDay.toLowerCase() === day.toLowerCase()\n                            ? 'primary'\n                            : 'outline-primary'}\n                          disabled={anchorDay.toLowerCase() === anchorDayAnswer.toLowerCase()}\n                          onClick={() => setAnchorDay(day)}>{day}</Button>\n                      ))}\n                    </ButtonGroup>\n                  </Form.Group>\n\n                  <Form.Group\n                    className={`mb-3 ${anchorDay.toLowerCase() === anchorDayAnswer.toLowerCase() ? '' : 'd-none'}`}\n                    controlId='modulo7'\n                  >\n                    <Form.Label>Calculate Day of Week</Form.Label>\n                    <br></br>\n                    <Form.Text className='text-white'>Use the doomsday number to calculate the day of the week.</Form.Text>\n                    <br />\n                    <ButtonGroup className=\"mt-1 text-white\" aria-label=\"First group\"\n                      ref={refs.dayOfWeek}>\n                      {['Sunday', 'Monday', 'Tuesday', 'Wednesday'].map((day, index) => (\n                        <Button\n                          key={index}\n                          variant={dayOfWeek.toLowerCase() === dayOfWeekAnswer.toLowerCase() && dayOfWeek.toLowerCase() === day.toLowerCase()\n                            ? 'primary'\n                            : 'outline-primary'}\n                          disabled={dayOfWeek.toLowerCase() === dayOfWeekAnswer.toLowerCase()}\n                          onClick={() => setDayOfWeek(day)}>{day}</Button>\n                      ))}\n                    </ButtonGroup>\n                    <ButtonGroup className=\"mt-1 text-white\" aria-label=\"First group\">\n                      {['Thursday', 'Friday', 'Saturday'].map((day, index) => (\n                        <Button\n                          key={index}\n                          variant={dayOfWeek.toLowerCase() === dayOfWeekAnswer.toLowerCase() && dayOfWeek.toLowerCase() === day.toLowerCase()\n                            ? 'primary'\n                            : 'outline-primary'}\n                          disabled={dayOfWeek.toLowerCase() === dayOfWeekAnswer.toLowerCase()}\n                          onClick={() => setDayOfWeek(day)}>{day}</Button>\n                      ))}\n                    </ButtonGroup>\n                  </Form.Group>\n\n                </Form>\n              </Card.Body>\n              <Card.Footer>\n                <Button\n                  variant=\"secondary\"\n                  size='lg'\n                  onClick={() => reset()}>New Date</Button>\n                <Notes/>\n              </Card.Footer>\n            </Card>\n\n          </div>\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\nexport default Trainer\n","import React from 'react'\nimport { Link, Navigate } from 'react-router-dom'\nimport heroStyles from '../styles/heroStyles'\n\nconst Home = ({ user }) => {\n  if (user) {\n    return <Navigate to=\"train\" />\n  }\n  return (\n    <div style={heroStyles}>\n      <h1>Doomsday Rule Trainer</h1>\n      <h2 className='mb-3'>Sign In to start training!</h2>\n      <Link to='/sign-in'>\n        <button className='btn btn-dark btn-lg'>\n  Sign In\n        </button>\n      </Link>\n\n    </div>\n  )\n}\n\nexport default Home\n","/* eslint-disable no-tabs */\nimport React, { useState } from 'react'\nimport { Route, Routes } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\n\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\nimport Header from './components/Header/Header'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\n\nimport Trainer from './components/trainer/Trainer'\nimport UnauthenticatedHome from './components/UnauthenticatedHome'\n\nconst App = () => {\n  const [user, setUser] = useState(null)\n  const [msgAlerts, setMsgAlerts] = useState([])\n\n  const clearUser = () => setUser(null)\n\n  const msgAlert = ({ heading, message, variant }) => {\n    const id = uuid()\n    setMsgAlerts(msgAlerts => ([...msgAlerts, { heading, message, variant, id }]))\n  }\n\n  return (\n    <>\n      <Header user={user} />\n      {msgAlerts.map(msgAlert => (\n        <AutoDismissAlert\n          key={msgAlert.id}\n          heading={msgAlert.heading}\n          variant={msgAlert.variant}\n          message={msgAlert.message}\n          id={msgAlert.id}\n        />\n      ))}\n      <main>\n        <Routes>\n          <Route\n            path='/sign-up'\n            element={<SignUp msgAlert={msgAlert} setUser={setUser} /> }\n          />\n          <Route\n            path='/sign-in'\n            element={<SignIn msgAlert={msgAlert} setUser={setUser} /> }\n          />\n          <Route\n            path='/sign-out'\n            element={<SignOut msgAlert={msgAlert} clearUser={clearUser} user={user} /> }\n          />\n          <Route\n            path='/change-password'\n            element={<ChangePassword msgAlert={msgAlert} user={user} /> }\n          />\n\n          <Route path='/' element={<UnauthenticatedHome user={user} />} />\n\n          <Route\n            path='/train'\n            element={<Trainer msgAlert={msgAlert} user={user} />}\n          />\n\n        </Routes>\n      </main>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}